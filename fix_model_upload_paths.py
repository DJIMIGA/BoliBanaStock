#!/usr/bin/env python3
"""
Script de correction des chemins d'upload dans les mod√®les
Corrige les chemins cod√©s en dur vers la nouvelle structure S3
"""

import os
import sys
import django
from pathlib import Path
import logging
from datetime import datetime

# Configuration du logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('fix_upload_paths.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# Ajouter le r√©pertoire racine au path Python
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bolibanastock.settings_railway')
django.setup()

from django.conf import settings
from apps.inventory.models import Product, Category, Brand
from apps.core.models import Configuration

class UploadPathFixer:
    """Classe pour corriger les chemins d'upload dans les mod√®les"""
    
    def __init__(self):
        self.fixed_count = 0
        self.errors_count = 0
        
    def fix_product_image_paths(self):
        """Corrige les chemins des images de produits"""
        logger.info("üîß Correction des chemins d'images de produits...")
        
        try:
            products = Product.objects.all()
            fixed_products = 0
            
            for product in products:
                try:
                    if product.image and product.image.name:
                        old_path = product.image.name
                        
                        # V√©rifier si le chemin utilise l'ancienne structure
                        if old_path.startswith('assets/products/site-default/') or old_path.startswith('sites/'):
                            # Extraire le nom du fichier
                            filename = os.path.basename(old_path)
                            
                            # G√©n√©rer le nouveau chemin
                            if hasattr(product, 'site_configuration') and product.site_configuration:
                                site_id = str(product.site_configuration.id)
                                new_path = f'assets/products/site-{site_id}/{filename}'
                            else:
                                new_path = f'assets/products/site-default/{filename}'
                            
                            # Mettre √† jour le chemin dans la base de donn√©es
                            product.image.name = new_path
                            product.save(update_fields=['image'])
                            
                            logger.info(f"‚úÖ Produit {product.id}: {old_path} -> {new_path}")
                            fixed_products += 1
                            
                except Exception as e:
                    logger.error(f"‚ùå Erreur lors de la correction du produit {product.id}: {e}")
                    self.errors_count += 1
            
            logger.info(f"‚úÖ {fixed_products} chemins de produits corrig√©s")
            self.fixed_count += fixed_products
            
        except Exception as e:
            logger.error(f"‚ùå Erreur lors de la correction des produits: {e}")
            self.errors_count += 1
    
    def fix_category_image_paths(self):
        """Corrige les chemins des images de cat√©gories"""
        logger.info("üîß Correction des chemins d'images de cat√©gories...")
        
        try:
            categories = Category.objects.all()
            fixed_categories = 0
            
            for category in categories:
                try:
                    if category.image and category.image.name:
                        old_path = category.image.name
                        
                        # V√©rifier si le chemin utilise l'ancienne structure
                        if old_path.startswith('categories/'):
                            # Extraire le nom du fichier
                            filename = os.path.basename(old_path)
                            
                            # G√©n√©rer le nouveau chemin
                            if hasattr(category, 'site_configuration') and category.site_configuration:
                                site_id = str(category.site_configuration.id)
                                new_path = f'assets/categories/site-{site_id}/{filename}'
                            else:
                                new_path = f'assets/categories/site-default/{filename}'
                            
                            # Mettre √† jour le chemin dans la base de donn√©es
                            category.image.name = new_path
                            category.save(update_fields=['image'])
                            
                            logger.info(f"‚úÖ Cat√©gorie {category.id}: {old_path} -> {new_path}")
                            fixed_categories += 1
                            
                except Exception as e:
                    logger.error(f"‚ùå Erreur lors de la correction de la cat√©gorie {category.id}: {e}")
                    self.errors_count += 1
            
            logger.info(f"‚úÖ {fixed_categories} chemins de cat√©gories corrig√©s")
            self.fixed_count += fixed_categories
            
        except Exception as e:
            logger.error(f"‚ùå Erreur lors de la correction des cat√©gories: {e}")
            self.errors_count += 1
    
    def fix_brand_logo_paths(self):
        """Corrige les chemins des logos de marques"""
        logger.info("üîß Correction des chemins de logos de marques...")
        
        try:
            brands = Brand.objects.all()
            fixed_brands = 0
            
            for brand in brands:
                try:
                    if brand.logo and brand.logo.name:
                        old_path = brand.logo.name
                        
                        # V√©rifier si le chemin utilise l'ancienne structure
                        if old_path.startswith('brands/'):
                            # Extraire le nom du fichier
                            filename = os.path.basename(old_path)
                            
                            # G√©n√©rer le nouveau chemin (marques dans site-default)
                            new_path = f'assets/brands/site-default/{filename}'
                            
                            # Mettre √† jour le chemin dans la base de donn√©es
                            brand.logo.name = new_path
                            brand.save(update_fields=['logo'])
                            
                            logger.info(f"‚úÖ Marque {brand.id}: {old_path} -> {new_path}")
                            fixed_brands += 1
                            
                except Exception as e:
                    logger.error(f"‚ùå Erreur lors de la correction de la marque {brand.id}: {e}")
                    self.errors_count += 1
            
            logger.info(f"‚úÖ {fixed_brands} chemins de marques corrig√©s")
            self.fixed_count += fixed_brands
            
        except Exception as e:
            logger.error(f"‚ùå Erreur lors de la correction des marques: {e}")
            self.errors_count += 1
    
    def fix_configuration_logo_paths(self):
        """Corrige les chemins des logos de configuration"""
        logger.info("üîß Correction des chemins de logos de configuration...")
        
        try:
            configurations = Configuration.objects.all()
            fixed_configs = 0
            
            for config in configurations:
                try:
                    if config.logo and config.logo.name:
                        old_path = config.logo.name
                        
                        # V√©rifier si le chemin utilise l'ancienne structure
                        if old_path.startswith('config/'):
                            # Extraire le nom du fichier
                            filename = os.path.basename(old_path)
                            
                            # G√©n√©rer le nouveau chemin
                            new_path = f'assets/logos/site-default/{filename}'
                            
                            # Mettre √† jour le chemin dans la base de donn√©es
                            config.logo.name = new_path
                            config.save(update_fields=['logo'])
                            
                            logger.info(f"‚úÖ Configuration {config.id}: {old_path} -> {new_path}")
                            fixed_configs += 1
                            
                except Exception as e:
                    logger.error(f"‚ùå Erreur lors de la correction de la configuration {config.id}: {e}")
                    self.errors_count += 1
            
            logger.info(f"‚úÖ {fixed_configs} chemins de configuration corrig√©s")
            self.fixed_count += fixed_configs
            
        except Exception as e:
            logger.error(f"‚ùå Erreur lors de la correction des configurations: {e}")
            self.errors_count += 1
    
    def run_fix(self):
        """Ex√©cute la correction compl√®te des chemins"""
        logger.info("üöÄ D√©but de la correction des chemins d'upload...")
        
        try:
            # Correction des diff√©rents types de mod√®les
            self.fix_product_image_paths()
            self.fix_category_image_paths()
            self.fix_brand_logo_paths()
            self.fix_configuration_logo_paths()
            
            logger.info("üéâ Correction des chemins termin√©e!")
            logger.info(f"üìä R√©sum√©: {self.fixed_count} chemins corrig√©s, {self.errors_count} erreurs")
            
            return True
            
        except Exception as e:
            logger.error(f"‚ùå Correction √©chou√©e: {e}")
            return False

def main():
    """Fonction principale"""
    try:
        print("üîß Script de correction des chemins d'upload dans les mod√®les")
        print("=" * 70)
        
        fixer = UploadPathFixer()
        success = fixer.run_fix()
        
        if success:
            print("\n‚úÖ Correction termin√©e avec succ√®s!")
            print(f"üìä {fixer.fixed_count} chemins corrig√©s")
            if fixer.errors_count > 0:
                print(f"‚ö†Ô∏è {fixer.errors_count} erreurs rencontr√©es")
            print("üìä Consultez le fichier de log pour plus de d√©tails")
        else:
            print("\n‚ùå Correction √©chou√©e")
            sys.exit(1)
        
    except Exception as e:
        logger.error(f"‚ùå Correction √©chou√©e: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
