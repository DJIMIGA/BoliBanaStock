#!/usr/bin/env python3
"""
Script d'ajout des nouveaux rayons de supermarch√©
Ajoute les rayons manquants identifi√©s par l'utilisateur
"""

import os
import sys
import django
from django.db import transaction

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bolibanastock.settings')
django.setup()

from apps.inventory.models import Category
from django.utils.text import slugify

# Nouveaux rayons √† ajouter
NEW_SUPERMARKET_RAYS = {
    'sante_pharmacie': {
        'name': 'Sant√© et Pharmacie, Parapharmacie',
        'description': 'Produits de sant√©, pharmacie et parapharmacie',
        'order': 11,
        'children': [
            {'name': 'M√©dicaments sans ordonnance', 'description': 'M√©dicaments en vente libre', 'order': 1},
            {'name': 'Compl√©ments alimentaires', 'description': 'Vitamines et compl√©ments', 'order': 2},
            {'name': 'Produits de soins', 'description': 'Soins du corps et du visage', 'order': 3},
            {'name': 'Produits d\'hygi√®ne intime', 'description': 'Protections et soins intimes', 'order': 4},
            {'name': 'Appareils m√©dicaux', 'description': 'Thermom√®tres, tensiom√®tres, etc.', 'order': 5},
            {'name': 'Produits pour seniors', 'description': 'Aides et soins pour personnes √¢g√©es', 'order': 6},
        ]
    },
    'jardinage': {
        'name': 'Jardinage',
        'description': 'Produits de jardinage et loisirs ext√©rieurs',
        'order': 12,
        'children': [
            {'name': 'Graines et plants', 'description': 'Graines, plants et semences', 'order': 1},
            {'name': 'Outils de jardinage', 'description': 'Outils et √©quipements de jardin', 'order': 2},
            {'name': 'Engrais et terreaux', 'description': 'Fertilisants et substrats', 'order': 3},
            {'name': 'Pots et jardini√®res', 'description': 'Contenants pour plantes', 'order': 4},
            {'name': 'D√©corations de jardin', 'description': 'Ornements et d√©corations ext√©rieures', 'order': 5},
            {'name': '√âquipements de piscine', 'description': 'Accessoires et produits piscine', 'order': 6},
        ]
    },
    'high_tech': {
        'name': 'High-tech, T√©l√©phonie',
        'description': '√âlectronique, informatique et t√©l√©phonie',
        'order': 13,
        'children': [
            {'name': 'T√©l√©phones et accessoires', 'description': 'Smartphones et accessoires', 'order': 1},
            {'name': 'Ordinateurs et tablettes', 'description': 'PC, laptops et tablettes', 'order': 2},
            {'name': 'Audio et vid√©o', 'description': '√âcouteurs, enceintes, TV', 'order': 3},
            {'name': 'Gaming', 'description': 'Consoles et jeux vid√©o', 'order': 4},
            {'name': 'Accessoires informatiques', 'description': 'Souris, claviers, c√¢bles', 'order': 5},
            {'name': '√âlectrom√©nager connect√©', 'description': 'Objets connect√©s et domotique', 'order': 6},
        ]
    },
    'jouets_livres': {
        'name': 'Jouets, Jeux Vid√©o, Livres',
        'description': 'Jouets, jeux et litt√©rature',
        'order': 14,
        'children': [
            {'name': 'Jouets pour enfants', 'description': 'Jouets par √¢ge et cat√©gorie', 'order': 1},
            {'name': 'Jeux de soci√©t√©', 'description': 'Jeux de plateau et cartes', 'order': 2},
            {'name': 'Jeux vid√©o', 'description': 'Jeux pour consoles et PC', 'order': 3},
            {'name': 'Livres et magazines', 'description': 'Litt√©rature et presse', 'order': 4},
            {'name': 'Fournitures scolaires', 'description': 'Cahiers, stylos, cartables', 'order': 5},
            {'name': 'Activit√©s cr√©atives', 'description': 'Coloriage, peinture, bricolage', 'order': 6},
        ]
    },
    'meubles_linge': {
        'name': 'Meubles, Linge de Maison',
        'description': 'Mobilier et textile de maison',
        'order': 15,
        'children': [
            {'name': 'Mobilier de salon', 'description': 'Canap√©s, tables, chaises', 'order': 1},
            {'name': 'Mobilier de chambre', 'description': 'Lits, armoires, commodes', 'order': 2},
            {'name': 'Mobilier de cuisine', 'description': 'Tables, chaises, √©tag√®res', 'order': 3},
            {'name': 'Linge de lit', 'description': 'Draps, couvertures, oreillers', 'order': 4},
            {'name': 'Linge de table', 'description': 'Nappes, serviettes, sets de table', 'order': 5},
            {'name': 'D√©coration int√©rieure', 'description': 'Cadres, miroirs, objets d√©coratifs', 'order': 6},
        ]
    },
    'animalerie': {
        'name': 'Animalerie',
        'description': 'Produits pour animaux domestiques',
        'order': 16,
        'children': [
            {'name': 'Nourriture pour chiens', 'description': 'Croquettes et p√¢t√©es pour chiens', 'order': 1},
            {'name': 'Nourriture pour chats', 'description': 'Croquettes et p√¢t√©es pour chats', 'order': 2},
            {'name': 'Nourriture pour oiseaux', 'description': 'Graines et aliments pour oiseaux', 'order': 3},
            {'name': 'Accessoires pour animaux', 'description': 'Jouets, laisses, paniers', 'order': 4},
            {'name': 'Hygi√®ne et soins', 'description': 'Shampoings, brosses, soins', 'order': 5},
            {'name': 'Aquariophilie', 'description': 'Aquariums et accessoires', 'order': 6},
        ]
    },
    'mode_bijoux': {
        'name': 'Mode, Bijoux, Bagagerie',
        'description': 'V√™tements, bijoux et accessoires',
        'order': 17,
        'children': [
            {'name': 'V√™tements femmes', 'description': 'Mode f√©minine', 'order': 1},
            {'name': 'V√™tements hommes', 'description': 'Mode masculine', 'order': 2},
            {'name': 'V√™tements enfants', 'description': 'Mode enfantine', 'order': 3},
            {'name': 'Chaussures', 'description': 'Chaussures pour tous', 'order': 4},
            {'name': 'Bijoux et montres', 'description': 'Bijoux, montres et accessoires', 'order': 5},
            {'name': 'Sacs et bagagerie', 'description': 'Sacs √† main, valises, sacs √† dos', 'order': 6},
        ]
    }
}

def add_new_rays():
    """Ajoute les nouveaux rayons de supermarch√©"""
    
    print("üè™ Ajout des nouveaux rayons de supermarch√©...")
    
    with transaction.atomic():
        created_count = 0
        updated_count = 0
        error_count = 0
        
        for rayon_type, rayon_data in NEW_SUPERMARKET_RAYS.items():
            print(f"\nüì¶ Ajout du rayon: {rayon_data['name']}")
            
            # Cr√©er la cat√©gorie principale du rayon
            try:
                main_category, created = Category.objects.get_or_create(
                    name=rayon_data['name'],
                    defaults={
                        'slug': slugify(rayon_data['name']),
                        'description': rayon_data['description'],
                        'order': rayon_data['order'],
                        'is_global': True,      # Accessible √† tous les sites
                        'is_rayon': True,       # C'est un rayon de supermarch√©
                        'rayon_type': rayon_type,
                        'is_active': True,
                        'site_configuration': None,  # Cat√©gorie globale
                    }
                )
            except Exception as e:
                print(f"  ‚ùå Erreur cr√©ation rayon principal {rayon_data['name']}: {e}")
                error_count += 1
                continue
            
            if created:
                print(f"  ‚úÖ Rayon principal cr√©√©: {main_category.name}")
                created_count += 1
            else:
                print(f"  üîÑ Rayon principal existant: {main_category.name}")
                updated_count += 1
            
            # Cr√©er les sous-cat√©gories
            for child_data in rayon_data['children']:
                try:
                    child_category, child_created = Category.objects.get_or_create(
                        name=child_data['name'],
                        parent=main_category,
                        defaults={
                            'slug': slugify(child_data['name']),
                            'description': child_data['description'],
                            'order': child_data['order'],
                            'level': 1,  # Sous-cat√©gorie
                            'is_global': True,
                            'is_rayon': True,
                            'rayon_type': rayon_type,
                            'is_active': True,
                            'site_configuration': None,
                        }
                    )
                    
                    if child_created:
                        print(f"    ‚úÖ Sous-cat√©gorie cr√©√©e: {child_category.name}")
                        created_count += 1
                    else:
                        print(f"    üîÑ Sous-cat√©gorie existante: {child_category.name}")
                        updated_count += 1
                        
                except Exception as e:
                    print(f"    ‚ùå Erreur sous-cat√©gorie {child_data['name']}: {e}")
                    error_count += 1
    
    print(f"\nüìä R√âSULTATS:")
    print(f"  ‚úÖ Cr√©√©s: {created_count}")
    print(f"  üîÑ Mis √† jour: {updated_count}")
    print(f"  ‚ùå Erreurs: {error_count}")
    
    return created_count, updated_count, error_count

if __name__ == "__main__":
    print("üöÄ D√©marrage de l'ajout des nouveaux rayons...")
    created, updated, errors = add_new_rays()
    
    if errors == 0:
        print("\nüéâ Tous les nouveaux rayons ont √©t√© ajout√©s avec succ√®s!")
    else:
        print(f"\n‚ö†Ô∏è  {errors} erreurs rencontr√©es. V√©rifiez les logs ci-dessus.")
