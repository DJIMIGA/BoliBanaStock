#!/usr/bin/env python3
"""
Test de compl√©tion des CUG num√©riques pour g√©n√©rer des EAN-13
"""

import os
import sys
import django

# Configuration Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bolibanastock.settings')
django.setup()

from apps.inventory.utils import generate_ean13_from_cug

def test_cug_numerique():
    """Test de compl√©tion des CUG num√©riques"""
    print("üß™ Test de compl√©tion des CUG num√©riques...")
    
    test_cugs = [
        "1",         # CUG court
        "12",        # CUG court
        "123",       # CUG court
        "1234",      # CUG court
        "12345",     # CUG de 5 chiffres
        "123456",    # CUG long
        "99999",     # CUG de 5 chiffres
        "00001",     # CUG avec z√©ros
    ]
    
    print(f"\nüìã Exemples de compl√©tion de CUG num√©riques :")
    print("=" * 70)
    
    for cug in test_cugs:
        try:
            ean = generate_ean13_from_cug(cug)
            cug_complete = cug.zfill(5)
            print(f"CUG: {cug:<6} ‚Üí Compl√©t√©: {cug_complete} ‚Üí EAN-13: {ean}")
        except ValueError as e:
            print(f"CUG: {cug:<6} ‚Üí ERREUR: {str(e)}")
    
    print(f"\nüîç Test avec des CUG alphanum√©riques (doivent √©chouer) :")
    test_cugs_alpha = ["API001", "INV001", "TEST001"]
    
    for cug in test_cugs_alpha:
        try:
            ean = generate_ean13_from_cug(cug)
            print(f"CUG: {cug:<6} ‚Üí EAN-13: {ean} (INATTENDU)")
        except ValueError as e:
            print(f"CUG: {cug:<6} ‚Üí ERREUR: {str(e)} (ATTENDU)")

if __name__ == "__main__":
    test_cug_numerique()
