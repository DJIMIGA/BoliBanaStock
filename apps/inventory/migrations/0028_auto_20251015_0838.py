# Generated by Django 4.2.24 on 2025-10-15 06:38

from django.db import migrations


def assign_main_site_to_products(apps, schema_editor):
    """
    Assigner le site principal (premier site créé) aux produits qui n'ont pas de site_configuration
    """
    Product = apps.get_model('inventory', 'Product')
    Configuration = apps.get_model('core', 'Configuration')
    
    # Récupérer le site principal (premier créé)
    main_site = Configuration.objects.order_by('id').first()
    
    if main_site:
        # Mettre à jour tous les produits sans site_configuration
        updated_count = Product.objects.filter(site_configuration__isnull=True).update(
            site_configuration=main_site
        )
        print(f"✅ Migration: {updated_count} produits assignés au site principal (id={main_site.id})")
    else:
        print("⚠️ Migration: Aucun site principal trouvé")


def reverse_assign_main_site_to_products(apps, schema_editor):
    """
    Annuler la migration - remettre site_configuration à NULL pour les produits du site principal
    """
    Product = apps.get_model('inventory', 'Product')
    Configuration = apps.get_model('core', 'Configuration')
    
    # Récupérer le site principal
    main_site = Configuration.objects.order_by('id').first()
    
    if main_site:
        # Remettre à NULL les produits du site principal
        updated_count = Product.objects.filter(site_configuration=main_site).update(
            site_configuration=None
        )
        print(f"✅ Rollback: {updated_count} produits remis à site_configuration=NULL")


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0027_add_brand_rayons_relation'),
        ('core', '0001_initial'),  # Dépendance vers le modèle Configuration
    ]

    operations = [
        migrations.RunPython(
            assign_main_site_to_products,
            reverse_assign_main_site_to_products,
        ),
    ]
