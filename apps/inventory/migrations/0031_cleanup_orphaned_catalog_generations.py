# Generated by Django 4.2.24 on 2025-10-17 06:15

from django.db import migrations
from django.conf import settings


def cleanup_orphaned_catalog_generations(apps, schema_editor):
    """
    Supprime les CatalogGeneration qui r√©f√©rencent des utilisateurs inexistants
    dans la table core_user
    """
    CatalogGeneration = apps.get_model('inventory', 'CatalogGeneration')
    User = apps.get_model('core', 'User')
    
    # R√©cup√©rer tous les IDs d'utilisateurs valides dans core_user
    valid_user_ids = set(User.objects.values_list('id', flat=True))
    
    # Trouver les CatalogGeneration avec des user_id invalides
    orphaned_generations = CatalogGeneration.objects.exclude(user_id__in=valid_user_ids)
    
    count = orphaned_generations.count()
    if count > 0:
        print(f"üßπ Suppression de {count} g√©n√©rations de catalogue orphelines...")
        orphaned_generations.delete()
        print(f"‚úÖ {count} g√©n√©rations orphelines supprim√©es")
    else:
        print("‚úÖ Aucune g√©n√©ration de catalogue orpheline trouv√©e")


def reverse_cleanup(apps, schema_editor):
    """
    Op√©ration inverse - ne peut pas √™tre annul√©e car les donn√©es sont supprim√©es
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0030_customer_credit_fields'),
        ('core', '0006_change_default_currency_to_fcfa'),
    ]

    operations = [
        migrations.RunPython(
            cleanup_orphaned_catalog_generations,
            reverse_cleanup,
        ),
    ]
