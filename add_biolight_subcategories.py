#!/usr/bin/env python3
"""
Script d'ajout des sous-cat√©gories Biolight au rayon DPH
Ajoute les produits de soins √©claircissants √† base de fleur d'hibiscus
"""

import os
import sys
import django
from django.db import transaction

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bolibanastock.settings')
django.setup()

from apps.inventory.models import Category
from django.utils.text import slugify

# Sous-cat√©gories Biolight √† ajouter au rayon DPH
BIOLIGHT_SUBCATEGORIES = [
    {
        'name': 'Biolight Hibiscus Flower Lightening Lotion',
        'description': 'Lotion √©claircissante √† la fleur d\'hibiscus',
        'order': 1,
    },
    {
        'name': 'Biolight Hibiscus Flower Lightening Cream',
        'description': 'Cr√®me √©claircissante √† la fleur d\'hibiscus',
        'order': 2,
    },
    {
        'name': 'Biolight Hibiscus Flower Oil',
        'description': 'Huile √©claircissante √† la fleur d\'hibiscus',
        'order': 3,
    },
    {
        'name': 'Biolight Hibiscus Flower Lightening Balm',
        'description': 'Baume √©claircissant √† la fleur d\'hibiscus',
        'order': 4,
    },
    {
        'name': 'Biolight Hibiscus Flower Lightening Soap',
        'description': 'Savon √©claircissant √† la fleur d\'hibiscus',
        'order': 5,
    },
    {
        'name': 'Biolight Hibiscus Flower Lightening Shower Gel',
        'description': 'Gel douche √©claircissant √† la fleur d\'hibiscus',
        'order': 6,
    },
    {
        'name': 'Biolight Hibiscus Flower Intense Lightening Cream',
        'description': 'Cr√®me √©claircissante intense √† la fleur d\'hibiscus',
        'order': 7,
    },
]

def add_biolight_subcategories():
    """Ajoute les sous-cat√©gories Biolight au rayon DPH"""
    
    print("üå∫ Ajout des sous-cat√©gories Biolight au rayon DPH...")
    
    try:
        # Trouver le rayon DPH
        dph_rayon = Category.objects.filter(
            is_rayon=True,
            rayon_type='dph',
            level=0,
            is_active=True
        ).first()
        
        if not dph_rayon:
            print("‚ùå Rayon DPH non trouv√©. Cr√©ation du rayon DPH...")
            dph_rayon = Category.objects.create(
                name='DPH (Droguerie, Parfumerie, Hygi√®ne)',
                slug=slugify('DPH (Droguerie, Parfumerie, Hygi√®ne)'),
                description='Produits de droguerie, parfumerie et hygi√®ne',
                is_global=True,
                is_rayon=True,
                rayon_type='dph',
                level=0,
                order=8,
                is_active=True
            )
            print(f"‚úÖ Rayon DPH cr√©√©: {dph_rayon.name}")
        
        print(f"üì¶ Rayon DPH trouv√©: {dph_rayon.name} (ID: {dph_rayon.id})")
        
        with transaction.atomic():
            created_count = 0
            updated_count = 0
            error_count = 0
            
            for subcat_data in BIOLIGHT_SUBCATEGORIES:
                print(f"\nüå∫ Ajout de: {subcat_data['name']}")
                
                try:
                    subcategory, created = Category.objects.get_or_create(
                        name=subcat_data['name'],
                        parent=dph_rayon,
                        defaults={
                            'slug': slugify(subcat_data['name']),
                            'description': subcat_data['description'],
                            'order': subcat_data['order'],
                            'level': 1,  # Sous-cat√©gorie
                            'is_global': True,
                            'is_rayon': True,
                            'rayon_type': 'dph',  # H√©rite du rayon parent
                            'is_active': True,
                            'site_configuration': None,  # Cat√©gorie globale
                        }
                    )
                    
                    if created:
                        print(f"  ‚úÖ Sous-cat√©gorie cr√©√©e: {subcategory.name}")
                        created_count += 1
                    else:
                        print(f"  üîÑ Sous-cat√©gorie existante: {subcategory.name}")
                        updated_count += 1
                        
                except Exception as e:
                    print(f"  ‚ùå Erreur sous-cat√©gorie {subcat_data['name']}: {e}")
                    error_count += 1
        
        print(f"\nüìä R√âSULTATS:")
        print(f"  ‚úÖ Cr√©√©es: {created_count}")
        print(f"  üîÑ Existantes: {updated_count}")
        print(f"  ‚ùå Erreurs: {error_count}")
        
        # Afficher la structure finale
        print(f"\nüå∫ Structure du rayon DPH apr√®s ajout:")
        print(f"  üìÅ {dph_rayon.name}")
        subcategories = Category.objects.filter(
            parent=dph_rayon,
            is_active=True
        ).order_by('order', 'name')
        
        for subcat in subcategories:
            print(f"    üå∏ {subcat.name}")
        
        return created_count, updated_count, error_count
        
    except Exception as e:
        print(f"‚ùå Erreur g√©n√©rale: {e}")
        return 0, 0, 1

if __name__ == "__main__":
    print("üöÄ D√©marrage de l'ajout des sous-cat√©gories Biolight...")
    created, updated, errors = add_biolight_subcategories()
    
    if errors == 0:
        print("\nüéâ Toutes les sous-cat√©gories Biolight ont √©t√© ajout√©es avec succ√®s!")
    else:
        print(f"\n‚ö†Ô∏è  {errors} erreurs rencontr√©es. V√©rifiez les logs ci-dessus.")
