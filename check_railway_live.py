#!/usr/bin/env python3
"""
Script pour v√©rifier la configuration Railway en temps r√©el
"""

import os
import requests
import json

def check_railway_live_config():
    """V√©rifie la configuration Railway en temps r√©el"""
    print("üîç V√©rification de la configuration Railway en temps r√©el...")
    print("=" * 60)
    
    # Variables critiques pour Railway
    critical_vars = [
        'DATABASE_URL',
        'DJANGO_SECRET_KEY', 
        'RAILWAY_ENVIRONMENT',
        'DJANGO_SETTINGS_MODULE'
    ]
    
    print("üìã Variables critiques sur Railway :")
    for var in critical_vars:
        value = os.getenv(var)
        if value:
            if var == 'DATABASE_URL':
                # Masquer les informations sensibles
                if 'postgresql://' in value:
                    print(f"  ‚úÖ {var}: postgresql://***:***@***:***/***")
                else:
                    print(f"  ‚úÖ {var}: {value}")
            elif var == 'DJANGO_SECRET_KEY':
                print(f"  ‚úÖ {var}: {'*' * 20}... (d√©finie)")
            else:
                print(f"  ‚úÖ {var}: {value}")
        else:
            print(f"  ‚ùå {var}: NON D√âFINIE")
    
    print("\nüîß Configuration actuelle :")
    print(f"  DJANGO_SETTINGS_MODULE: {os.getenv('DJANGO_SETTINGS_MODULE', 'Non d√©fini')}")
    print(f"  RAILWAY_ENVIRONMENT: {os.getenv('RAILWAY_ENVIRONMENT', 'Non d√©fini')}")
    
    # V√©rifier la base de donn√©es
    database_url = os.getenv('DATABASE_URL')
    if database_url:
        print(f"\nüóÑÔ∏è  Base de donn√©es configur√©e :")
        if 'postgresql' in database_url:
            print("  ‚úÖ PostgreSQL d√©tect√©")
            print("  üí° Railway g√®re automatiquement la connexion")
        elif 'sqlite' in database_url:
            print("  ‚úÖ SQLite d√©tect√©")
        else:
            print("  ‚ö†Ô∏è  Type de base de donn√©es inconnu")
    else:
        print("\nüóÑÔ∏è  Base de donn√©es :")
        print("  ‚ùå Aucune base de donn√©es configur√©e")
    
    print("\nüìù Recommandations :")
    missing_vars = [var for var in critical_vars if not os.getenv(var)]
    
    if missing_vars:
        print("  ‚ùå Variables manquantes :")
        for var in missing_vars:
            if var == 'DJANGO_SECRET_KEY':
                print(f"    ‚Ä¢ {var} : Utiliser python generate_secret_key.py")
            elif var == 'RAILWAY_ENVIRONMENT':
                print(f"    ‚Ä¢ {var} : D√©finir = production")
            elif var == 'DJANGO_SETTINGS_MODULE':
                print(f"    ‚Ä¢ {var} : D√©finir = bolibanastock.settings_railway")
    else:
        print("  ‚úÖ Toutes les variables critiques sont configur√©es !")
        print("  üöÄ Pr√™t pour le d√©ploiement Railway")

def test_django_config():
    """Teste la configuration Django avec les param√®tres Railway"""
    print("\nüß™ Test de la configuration Django...")
    
    try:
        # Simuler l'environnement Railway
        os.environ['RAILWAY_ENVIRONMENT'] = 'production'
        os.environ['DJANGO_SETTINGS_MODULE'] = 'bolibanastock.settings_railway'
        
        # Importer Django
        import django
        django.setup()
        
        print("  ‚úÖ Django initialis√© avec succ√®s")
        
        # V√©rifier la configuration de la base de donn√©es
        from django.conf import settings
        if hasattr(settings, 'DATABASES') and settings.DATABASES:
            db_config = settings.DATABASES.get('default', {})
            engine = db_config.get('ENGINE', '')
            if 'postgresql' in engine:
                print("  ‚úÖ Configuration PostgreSQL d√©tect√©e")
            elif 'sqlite' in engine:
                print("  ‚úÖ Configuration SQLite de fallback")
            else:
                print(f"  ‚ö†Ô∏è  Moteur de base de donn√©es : {engine}")
        else:
            print("  ‚ùå Configuration de base de donn√©es manquante")
            
    except Exception as e:
        print(f"  ‚ùå Erreur lors de l'initialisation Django : {e}")
        print("  üí° V√©rifiez que toutes les variables sont configur√©es")

if __name__ == "__main__":
    check_railway_live_config()
    test_django_config()
